
name: Hosting nodejs app
on:
  push: 
    branches:
      - main
      
jobs: 
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: checking out code
        uses: actions/checkout@v3
        
      - name: Set up Nodejs  version
        uses: actions/setup-node@v3   
        with: 
         node-version: '18.x'
         
      - name: Install the node modules
        run: npm install
        
   
        
      - name: Upload the node modules for next jobs
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: ./node_modules
          
  deploy: 
    runs-on: ubuntu-latest
    needs: build
    
    steps: 
    - name: checkout code
      uses: actions/checkout@v3
      
    - name: Downoad the artifact from the build job that we uploaded
      uses: actions/download-artifact@v3
      with:
          name: node_modules
          path: ./node_modules
          
    - name: Set up ssh key
      run: |
          echo "${{secrets.PRIVATE_KEY}}" >> key.pem
          chmod 600 key.pem
  
    - name: copy files to ec2
      run: |
        scp -i key.pem \
        -o StrictHostKeyChecking=no \
        -o UserKnownHostsFile=/dev/null \
        -r ./* ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu

    - name: Install MariaDB
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{secrets.EC2_IP}} 'sudo apt-get update -y && sudo apt-get install mariadb-server -y'

    - name: Run mysql_secure_installation
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{secrets.EC2_IP}} '
          sudo apt update
          sudo apt install -y expect
          expect -c "
            spawn sudo mysql_secure_installation
            expect \"Enter current password for root (enter for none):\"
            send \"\r\"
            expect \"Set root password? \[Y/n\]:\"
            send \"Y\r\"
            expect \"New password:\"
            send \"sush123\r\"
            expect \"Re-enter new password:\"
            send \"sush123\r\"
            expect \"Remove anonymous users? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Disallow root login remotely? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Remove test database and access to it? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Reload privilege tables now? \[Y/n\]:\"
            send \"Y\r\"
            expect eof
          "
        '
    - name: Create Database and User
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{secrets.EC2_IP}} '
          sudo mysql -e "
            CREATE USER IF NOT EXISTS '\''sush'\''@'\''localhost'\'' IDENTIFIED BY '\''sush123'\'';
            CREATE DATABASE IF NOT EXISTS my_db;
            GRANT ALL PRIVILEGES ON my_db.* TO '\''sush'\''@'\''localhost'\'';
            FLUSH PRIVILEGES;
            exit
          "
        ' 
    - name: Start MySQL service
      run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{secrets.EC2_IP}} 'sudo systemctl start mysql'
     
    - name: Create User table
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{secrets.EC2_IP}} '
          sudo mysql -e "
            USE my_db;
            CREATE TABLE IF NOT EXISTS employee (
              id INT AUTO_INCREMENT PRIMARY KEY,
              name VARCHAR(255),
              phone VARCHAR(255),
              email VARCHAR(255),
              address VARCHAR(255)
            );
          "
          '
    - name: starting nodejs app
      run: |
       ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }} '
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash &&
        export NVM_DIR="$HOME/.nvm" &&
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" &&
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" &&
        nvm install --lts
        cd /home/ubuntu &&
        npm install
        npm i mysql2
        node app.js
        ' 
 
